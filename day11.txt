//k largest element
#include <bits/stdc++.h> 
vector<int> kMaxSumCombination(vector<int> &a, vector<int> &b, int n, int k){
	// Write your code here.
	priority_queue<int>pq;
	for(int i=0;i<n;i++){
		for(int j=0;j<n;j++){
			pq.push(a[i]+b[j]);
		}
	}
	vector<int>ans;
	while(!pq.empty() && k){
		ans.push_back(pq.top());
		pq.pop();
		k--;
	}
	return ans;
}
//Kth smallest and largest number
#include<bits/stdc++.h>
vector<int> kthSmallLarge(vector<int> &arr, int n, int k)
{
	// Write your code here.
	sort(arr.begin(),arr.end());
	return {arr[k-1],arr[n-k]};
}
//Min heap
#include <bits/stdc++.h> 
vector<int> minHeap(int n, vector<vector<int>>& q) {
    // Write your code here.
    vector<int>ans;
    priority_queue<int,vector<int>,greater<int>>pq;
    for(auto it:q){
        if(it[0]==0){
            pq.push(it[1]);
        }
        else{
            ans.push_back(pq.top());
            pq.pop();
        }
    }
    return ans;
}
//Median in matrix
#include<bits/stdc++.h>
int getMedian(vector<vector<int>> &matrix)
{
    // Write your code here.
    vector<int>ans;
    for(int i=0;i<matrix.size();i++){
        for(int j=0;j<matrix[0].size();j++){
            ans.push_back(matrix[i][j]);
        }
    }
    sort(ans.begin(),ans.end());
    int n=ans.size();
    return ans[n/2];
}
//merge K sorted array
